
// Ported by Isaac Shelton from Erin Catto's Box2D @ 95f74a46c077825478f989df6a81003ca538c2c2

// MIT License

// Copyright (c) 2020-2021 Isaac Shelton

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.


import "b2_math.adept"

/// Profiling data. Times are in milliseconds.
struct b2Profile (step, collide, solve, solveInit, solveVelocity, solvePosition, broadphase, solveTOI float)

/// This is an internal structure.
struct b2TimeStep (
    dt float,               // time step
	inv_dt float,           // inverse time step (0 if dt == 0).
	dtRatio float,          // dt * inv_dt0
	velocityIterations int,
	positionIterations int,
	warmStarting bool
)

/// This is an internal structure.
struct b2Position (c b2Vec2, a float)

/// This is an internal structure.
struct b2Velocity (v b2Vec2, w float)

/// Solver Data
struct b2SolverData (
    step b2TimeStep,
    positions *b2Position,
    velocities *b2Velocity
)
