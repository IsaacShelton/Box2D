
pragma compiler_version '2.5'

import basics
import "../../Box2D/box2d.adept"

func main {
    gravity b2Vec2 = b2Vec2(0.0f, -10.0f)
    b2World(undef world b2World, &gravity)

    ground_bodydef b2BodyDef = b2BodyDef()
    ground_bodydef.position.Set(0.0f, -10.0f)

    ground_body *b2Body = world.CreateBody(&ground_bodydef)

    ground_box b2PolygonShape = b2PolygonShape()
    ground_box.SetAsBox(50.0f, 10.0f)

    ground_body.CreateFixture(&ground_box as *b2Shape, 0.0f)

    bodydef b2BodyDef = b2BodyDef()
    bodydef.type = b2_dynamicBody
    bodydef.position.Set(0.0f, 4.0f)
    body *b2Body = world.CreateBody(&bodydef)

    dynamic_box b2PolygonShape = b2PolygonShape()
    dynamic_box.SetAsBox(1.0f, 1.0f)

    fixturedef b2FixtureDef = b2FixtureDef()
    fixturedef.shape = &dynamic_box as *b2Shape
    fixturedef.density = 1.0f
    fixturedef.friction = 0.3f

    body.CreateFixture(&fixturedef)

    time_step float = 1.0f / 60.0f
    velocity_iterations int = 6
    position_iterations int = 2

    for(i int = 0; i < 60; ++i) {
        world.Step(time_step, velocity_iterations, position_iterations)
        position *b2Vec2 = body.GetPosition()
        angle float = body.GetAngle()
        printf('%4.2f %4.2f %4.2f\n', cast double position.x, cast double position.y, cast double angle)
    }
    
    print('done')
}
